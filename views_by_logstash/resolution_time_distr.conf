input {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "support_tickets"
    query => '{ "query": { "exists": { "field": "resolution_time_hours" } } }'
  }
}

filter {
  mutate {
    convert => { "resolution_time_hours" => "float" }
    add_field => { 
      "[@metadata][target_index]" => "tickets_hist_resolution_time" 
    }
  }

  # Bucket categorization using range checks
  if [resolution_time_hours] <= 1 {
    mutate { add_field => { "resolution_bucket" => "0-1h" } }
  } else if [resolution_time_hours] <= 4 {
    mutate { add_field => { "resolution_bucket" => "1-4h" } }
  } else if [resolution_time_hours] <= 8 {
    mutate { add_field => { "resolution_bucket" => "4-8h" } }
  } else if [resolution_time_hours] <= 24 {
    mutate { add_field => { "resolution_bucket" => "8-24h" } }
  } else if [resolution_time_hours] <= 48 {
    mutate { add_field => { "resolution_bucket" => "24-48h" } }
  } else {
    mutate { add_field => { "resolution_bucket" => "48h+" } }
  }
}

output {
  elasticsearch {
    hosts => ["localhost:9200"]
    index => "resolution_time_distr"
    document_id => "%{ticket_id}_resolution"
  }
}